"use strict";
/*
 * @adonisjs/lucid-slugify
 *
 * (c) Harminder Virk <virk@adonisjs.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleStrategy = void 0;
const helpers_1 = require("@poppinss/utils/build/helpers");
/**
 * A simple strategy to generate slugs
 */
class SimpleStrategy {
    constructor(config) {
        this.config = config;
        this.separator = this.config.separator || '-';
        this.maxLengthBuffer = 0;
    }
    /**
     * Makes the slug out the value string
     */
    makeSlug(_, __, value) {
        let baseSlug = helpers_1.string.toSlug(value, {
            replacement: this.separator,
            lower: true,
            strict: true,
        });
        /**
         * Limit to defined characters
         */
        if (this.config.maxLength) {
            baseSlug = helpers_1.string.truncate(baseSlug, this.config.maxLength - this.maxLengthBuffer, {
                completeWords: this.config.completeWords,
                suffix: '',
            });
        }
        return baseSlug;
    }
    /**
     * Returns the slug as it is
     */
    async makeSlugUnique(_, __, slug) {
        return slug;
    }
}
exports.SimpleStrategy = SimpleStrategy;
